{"title":"web anlize","uid":"f5bf84c2d35165f09ceb3a3c806b6043","slug":"web-anlize","date":"2021-07-06T12:46:25.000Z","updated":"2021-07-06T12:46:59.431Z","comments":true,"path":"static/api/articles/web-anlize.json","keywords":null,"cover":[],"content":"<p>本文会对目前流行的基于 JavaScript 的 web 跨端融合方案进行总结和分析，目标人群为 web 方向的从业者但是对跨端融合方案了解不多的人。</p>\n<h3 id=\"web-跨端融合简介\"><a href=\"#web-跨端融合简介\" class=\"headerlink\" title=\"web 跨端融合简介\"></a>web 跨端融合简介</h3><p>在 2015 年 React Native 发布之前，web 在移动端 APP 上主要通过 WebView 进行承载，其有许多优点，可以快速迭代发布，不特别受 APP 版本的影响，因此，一些快速发展的业务（包括前期的手机QQ、手机淘宝）大量采用了 WebView 内嵌 H5 页面的形式来推动业务。</p>\n<p>但是这种方式缺点也比较明显，主要体现在以下两点：</p>\n<ul>\n<li>加载时间较长，包括 WebView 初始化的时间、网络请求的时间。</li>\n<li>HTML 页面在性能上天然不如 Native 页面，无论怎么进行性能优化。</li>\n</ul>\n<p>在 2015 年，Facebook 推出了 React Native，从而打开了 web 跨端融合的大门，后续在此架构基础上又出现了阿里巴巴的 Weex（2016）、腾讯的小程序（小程序实际上更偏 web 一点，和其他几类稍有不同，本文不作介绍）、 Hippy（2018）、Taro（Taro 其实更偏向解释翻译，和其他几类定位不同）等跨端融合解决方案，并且渐渐被用到越来越多的项目中，目前，跨端融合开发已经是一种比较主流的 web 开发模式，在阿里系应用、腾讯的微信、QQ浏览器、手机QQ均已经进行了大规模应用。</p>\n<h3 id=\"基本架构\"><a href=\"#基本架构\" class=\"headerlink\" title=\"基本架构\"></a>基本架构</h3><p>虽然 web 跨端融合方案众多，除了上述提到的三种，还有各个公司的更多方案，但是一般来说跨端融合的技术架构都比较相近，我们可以通过下面这一个图来简单概括：</p>\n<p><img src=\"/static/img/1.jpg\"></p>\n<p>接下来，我们逐个进行简析：</p>\n","text":"本文会对目前流行的基于 JavaScript 的 web 跨端融合方案进行总结和分析，目标人群为 web 方向的从业者但是对跨端融合方案了解不多的人。 web 跨端融合简介在 2015 年 React Native 发布之前，web 在移动端 APP 上主要通过 WebView ...","link":"","photos":[],"count_time":{"symbolsCount":690,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"跨端融合","slug":"跨端融合","count":4,"path":"static/api/tags/跨端融合.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#web-%E8%B7%A8%E7%AB%AF%E8%9E%8D%E5%90%88%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">web 跨端融合简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">基本架构</span></a></li></ol>","author":{"name":"Aurora","slug":"aurora","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"web跨端融合","uid":"e505c281947364147d7901e03feae3ec","slug":"web跨端融合","date":"2021-07-06T12:52:25.000Z","updated":"2021-07-06T12:54:29.740Z","comments":true,"path":"static/api/articles/web跨端融合.json","keywords":null,"cover":[],"text":"本文会对目前流行的基于 JavaScript 的 web 跨端融合方案进行总结和分析，目标人群为 web 方向的从业者但是对跨端融合方案了解不多的人。 web 跨端融合简介在 2015 年 React Native 发布之前，web 在移动端 APP 上主要通过 WebView ...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"跨端融合","slug":"跨端融合","count":4,"path":"static/api/tags/跨端融合.json"}],"author":{"name":"Aurora","slug":"aurora","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"web跨端融合方案浅析","uid":"a83bc60e80e5d57e0f707880f8b54099","slug":"web跨端融合方案浅析","date":"2021-07-06T12:27:16.000Z","updated":"2021-07-06T12:54:24.347Z","comments":true,"path":"static/api/articles/web跨端融合方案浅析.json","keywords":null,"cover":[],"text":"本文会对目前流行的基于 JavaScript 的 web 跨端融合方案进行总结和分析，目标人群为 web 方向的从业者但是对跨端融合方案了解不多的人。 web 跨端融合简介在 2015 年 React Native 发布之前，web 在移动端 APP 上主要通过 WebView ...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"跨端融合","slug":"跨端融合","count":4,"path":"static/api/tags/跨端融合.json"}],"author":{"name":"Aurora","slug":"aurora","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}